class minStack:
    Stack=[]
    Min=[]
    def __init__(self):
        # Write your code here.
        
        pass
    
    # Function to add another element equal to num at the top of stack.
    def push(self, num: int) -> None:
        # Write your code here.
        
        self.Stack.append(num)
        
        if len(self.Min)==0 or num<=self.Min[-1]:
            self.Min.append(num)

        pass
    
    # Function to remove the top element of the stack.
    def pop(self) -> int:
        # Write your code here.
        if self.Stack:
            if self.Stack[-1]==self.Min[-1]:
                self.Min.pop()
            return self.Stack.pop()
        else:
            return -1
        pass
    
    # Function to return the top element of stack if it is present. Otherwise return -1.
    def top(self) -> int:
        # Write your code here.
        if self.Stack:
            return self.Stack[-1]
        return -1

        pass
    
    # Function to return minimum element of stack if it is present. Otherwise return -1.
    def getMin(self) -> int:
        # Write your code here.
        if self.Min:
            return self.Min[-1]
        return -1
